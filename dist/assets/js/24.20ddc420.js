(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{405:function(e,t,n){e.exports=n.p+"assets/img/babel.c38837b7.png"},491:function(e,t,n){"use strict";n.r(t);var a=n(28),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"babel进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel进阶"}},[e._v("#")]),e._v(" babel进阶")]),e._v(" "),a("p",[e._v("前主流的项目中的 devDependencies，会发现各种各样的模块工具；例如JavaScript转译、css预处理器、elint、pretiier都会用到babel解析的AST。")]),e._v(" "),a("p",[a("strong",[e._v("Babel 的解析器 Babel")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://astexplorer.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("AST 辅助开发工具"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"babel对代码的转化过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel对代码的转化过程"}},[e._v("#")]),e._v(" babel对代码的转化过程")]),e._v(" "),a("p",[a("img",{attrs:{src:n(405),alt:"avatar"}})]),e._v(" "),a("ul",[a("li",[e._v("parse: 把代码解析为AST")])]),e._v(" "),a("blockquote",[a("p",[e._v("@babel/parser")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const ast = parser(rawSource, {\n  sourceType: 'module',\n  plugins: [\n    \"jsx\",\n  ],\n});\n")])])]),a("ul",[a("li",[e._v("transform: 对代码进行操作")])]),e._v(" "),a("blockquote",[a("p",[e._v("@babel/traverse")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const ast = parse(`function square(num) {\n  return num * num;\n}`);\n\ntraverse(ast, { // 进行 ast 转换\n    Identifier(path) { // 遍历变量的visitor\n      // ...\n    },\n    // 其他的visitor遍历器\n  } \n)\n")])])]),a("ul",[a("li",[e._v("generator: AST还原成代码")])]),e._v(" "),a("blockquote",[a("p",[e._v("@babel/generator")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const output = generate(ast, { /* options */ });\n")])])]),a("ul",[a("li",[e._v("对AST节点操作，判断的类似于函数库")])]),e._v(" "),a("blockquote",[a("p",[e._v("@babel/types")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// is开头的用于判断节点\ntypes.isObjectProperty(node);\ntypes.isObjectMethod(node);\n\n// 创建 null 节点\nconst nullNode = types.nullLiteral();\n// 创建 square 变量节点\nconst squareNode = types.identifier('square');\n")])])]),a("ul",[a("li",[e._v("@bable/types 可以创建 ast 节点，但过于繁琐，通过 @babel/template 则可以快速创建整段的 ast 节点")])]),e._v(" "),a("blockquote",[a("p",[e._v("@babel/template")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 使用 @babel/template\n// 创建节点输入源代码即可，清晰易懂\nconst template = require('@babel/template').default;\nconst ast = template.ast(`import React from 'react'`);\n// path.replaceWith(ast) // 节点替换\n")])])]),a("h2",{attrs:{id:"实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战"}},[e._v("#")]),e._v(" 实战")]),e._v(" "),a("h3",{attrs:{id:"代码实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码实战"}},[e._v("#")]),e._v(" 代码实战")]),e._v(" "),a("ul",[a("li",[e._v("Babel插件规则")])]),e._v(" "),a("blockquote",[a("p",[e._v("Babel的插件模块，需要暴露一个function，function内返回visitor对象")])]),e._v(" "),a("ol",[a("li",[e._v("将函数参数sum换成n")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("转换前\nfunction square(num) {\n  return num * num;\n}\n转换后\nfunction square(n) {\n  return n * n;\n}\n")])])]),a("p",[e._v("代码：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = () => {\n  return {\n    visitor: {\n      Identifier(path) {\n        // 三个前置判断\n        if (path.node.name !== 'num') { // 变量需要为 num\n          return;\n        }\n        if (path.parent.type !== 'FunctionDeclaration') { // 父级需要为函数\n          return;\n        }\n        if (path.parent.id.name !== 'square') { // 函数名需要为 square\n          return;\n        }\n        const referencePaths = path.scope.bindings['num'].referencePaths; // 找到对应的引用\n        referencePaths.forEach(path => path.node.name = 'n'); // 修改引用值\n        path.node.name = 'n'; // 修改自身的值\n      },\n    }\n  }\n};\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("将文件中的let, cons转化为let, 箭头函数转化为普通函数")])]),e._v(" "),a("p",[e._v("plugins/changeKeyWord.js")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = function({type: t}) { // babel-types\n    return {\n        visitor: {\n            VariableDeclaration(path) { // 变量对应的访问者属性\n                const node = path.node;\n                ['let', 'const'].includes(node.kind) && (node.kind = 'var');\n            },\n            ArrowFunctionExpression(path) {\n                let { id, params, body, generator, async } = path.node;\n                //箭头函数我们会简写{return a+b} 为 a+b\n                if (!t.isBlockStatement(body)) {    \n                    const node = t.returnStatement(body);\n                    body = t.blockStatement([node]);\n                }\n                path.replaceWith(t.functionExpression(id, params, body, generator, async));\n            }\n\n        }\n    };\n}\n")])])]),a("p",[e._v("index.js")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// transform将源码转化为ast, 进行操作之后，任然返回源码\nconst {transform} = require('@babel/core'); \n\nconst fs = require('fs');\nconst content = fs.readFileSync('./before.js', 'utf8');\n\nconst res = transform(`${content}`, {\n    plugins: [require('./plugins/changeKeyWord')],\n});\n\nfs.existsSync('./after.js') && fs.unlinkSync('./after.js');\nfs.writeFileSync('./after.js', res.code, 'utf8')\n")])])]),a("blockquote",[a("p",[e._v("Visitors (访问者): 简单的说它们就是一个对象，定义了用于在一个树状结构中获取具体节点的方法。")])]),e._v(" "),a("h3",{attrs:{id:"定义一个babel-plugin集成在webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义一个babel-plugin集成在webpack"}},[e._v("#")]),e._v(" 定义一个babel-plugin集成在webpack")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const { declare } = require('@babel/helper-plugin-utils');\nmodule.exports = declare((api, options) => {\n  return {\n    name: 'your-plugin', // 定义插件名\n    visitor: { // 编写业务 visitor\n      Identifier(path,) {\n        // ...\n      },\n    }\n  }\n});\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 配置 babel.config.js\nmodule.exports = {\n    presets: [\n        require('@babel/preset-env'), // 可配合通用的 present\n    ],\n    plugins: [\n        require('your-plugin'),\n        // require('./your-plugin') 也可以为相对目录\n    ]\n};\n")])])]),a("h3",{attrs:{id:"自定义一个eslint规则插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义一个eslint规则插件"}},[e._v("#")]),e._v(" 自定义一个eslint规则插件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// eslint-plugin-my-eslint-plugin\nmodule.exports.rules = { \n  \"var-length\": context => ({ \n    // 定义 var-length 规则，对变量长度进行检测\n    VariableDeclarator: (node) => { \n      if (node.id.name.length <= 1){ \n        context.report(node, '变量名长度需要大于1');\n      }\n    }\n  })\n};\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// .eslintrc.js\nmodule.exports = {\n  root: true,\n  parserOptions: { ecmaVersion: 6 },\n  plugins: [\n   "my-eslint-plugin"\n  ],\n  rules: {\n    "my-eslint-plugin/var-length": "warn" \n  }\n};\n')])])]),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[e._v("#")]),e._v(" 参考文章：")]),e._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qiwoo_weekly/article/details/114909047",target:"_blank",rel:"noopener noreferrer"}},[e._v("Babel是什么？我们为什么要了解它?"),a("OutboundLink")],1)])]),e._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/j8_8QwFnyOr66m9aekor1g",target:"_blank",rel:"noopener noreferrer"}},[e._v("用JS解释JS！详解AST及其应用"),a("OutboundLink")],1)])]),e._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/DlFg0_BMP_VfL9Yn2k-m-w?forceh5=1",target:"_blank",rel:"noopener noreferrer"}},[e._v("你所需要知道的最新的babel兼容性实现方案"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);t.default=s.exports}}]);