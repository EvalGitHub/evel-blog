(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{497:function(a,t,r){"use strict";r.r(t);var e=r(28),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"dart基础语法学习"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dart基础语法学习"}},[a._v("#")]),a._v(" dart基础语法学习")]),a._v(" "),r("h2",{attrs:{id:"重要概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#重要概念"}},[a._v("#")]),a._v(" 重要概念")]),a._v(" "),r("blockquote",[r("p",[a._v("所有变量都是对象，每个对象都是一个 类 的实例。数字、函数以及 null 都是对象。所有的类都继承于 Object 类。")])]),a._v(" "),r("h3",{attrs:{id:"变量-var"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#变量-var"}},[a._v("#")]),a._v(" 变量 var")]),a._v(" "),r("blockquote",[r("p",[a._v('var a = 1;  类型推断为 int\nvar str = "abc"; 类型推断为string')])]),a._v(" "),r("p",[a._v("上面的设置方式和 int a = 1; String str = 'abc';等价；这种方式就固定了变量的类型，在dart中如果变量的类型已经被固定了\n是不能赋值于不同类型的值。")]),a._v(" "),r("blockquote",[r("p",[a._v("var a = 1; a = '111';")])]),a._v(" "),r("p",[a._v("上面的操作会报错")]),a._v(" "),r("p",[a._v("但是有时候需要的变量类型是动态不固定的，这个时候需要使用")]),a._v(" "),r("blockquote",[r("p",[a._v("\"dynamic name='Bob'; | Object name ='bob';\"")])]),a._v(" "),r("h3",{attrs:{id:"默认值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#默认值"}},[a._v("#")]),a._v(" 默认值")]),a._v(" "),r("p",[a._v("在dart中，未初始化的变量默认值都是null")]),a._v(" "),r("h3",{attrs:{id:"常量final-const"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常量final-const"}},[a._v("#")]),a._v(" 常量final/const")]),a._v(" "),r("p",[a._v("final/const都表示常量，")]),a._v(" "),r("p",[r("strong",[a._v("区别")]),a._v(" 在于final设置的常量值是在初始化的时候是没有值，但是一旦赋值了，就不允许修改（拥有一次修改值的情况）；\nconst设置的常量在初始化的时候是需要给值得并且以后不允许修改。")]),a._v(" "),r("h2",{attrs:{id:"内置变量类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内置变量类型"}},[a._v("#")]),a._v(" 内置变量类型")]),a._v(" "),r("blockquote",[r("p",[a._v("number, string, boolean, list, set, map, runes, symbols")])]),a._v(" "),r("h3",{attrs:{id:"number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[a._v("#")]),a._v(" number")]),a._v(" "),r("p",[a._v("number 可以细分 int(整型)/ double(浮点型)，他们都是num的子类，")]),a._v(" "),r("h4",{attrs:{id:"常见的properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常见的properties"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:"https://api.dart.dev/stable/2.10.4/dart-core/num-class.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("常见的Properties"),r("OutboundLink")],1)]),a._v(" "),r("blockquote",[r("p",[a._v("var a = 555")])]),a._v(" "),r("ul",[r("li",[a._v("isFinite 是否是有限")])]),a._v(" "),r("blockquote",[r("p",[a._v("print(a.isFinite);")])]),a._v(" "),r("ul",[r("li",[a._v("isNaN 是否是NaN")])]),a._v(" "),r("blockquote",[r("p",[a._v("print(a.isNaN)")])]),a._v(" "),r("ul",[r("li",[a._v("isInfinite")])]),a._v(" "),r("h4",{attrs:{id:"常见api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常见api"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:"https://api.dart.dev/stable/2.10.4/dart-core/num-class.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("常见api"),r("OutboundLink")],1)]),a._v(" "),r("p",[a._v("abs, ceil, floor, round, toString, compareTo")]),a._v(" "),r("p",[a._v("如果num已经具备的方法不足以满足你，可以使用"),r("a",{attrs:{href:"https://api.dart.dev/stable/2.10.4/dart-math/dart-math-library.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("dart:math"),r("OutboundLink")],1)]),a._v(" "),r("h3",{attrs:{id:"string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[a._v("#")]),a._v(" string")]),a._v(" "),r("ul",[r("li",[a._v("定义一个字符串变量")])]),a._v(" "),r("blockquote",[r("p",[a._v("String str1 = 'this is test string';  String str2 = 'this is test str2';")])]),a._v(" "),r("p",[a._v("判断字符串是否相等 ”==“")]),a._v(" "),r("blockquote",[r("p",[a._v("str1 == str2")])]),a._v(" "),r("ul",[r("li",[a._v("三个单引号或者三个双引号创建多行字符串")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var str = '''\nthis is one line,\nthis is two line,\nthis is three line,\n'''\n")])])]),r("ul",[r("li",[a._v("字符串中使用变量|表达式")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("string str = 'this is test app ${data.appName}'\n")])])]),r("ul",[r("li",[a._v("字符串前加上 r 作为前缀创建 “raw” 字符串（即不会被做任何处理（比如转义）的字符串）")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var s = r'In a raw string, not even \\n gets special treatment.';\n")])])]),r("p",[a._v("等价于")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var s = r'在 raw 字符串中，转义字符串 \\n 会直接输出 “\\n” 而不是转义为换行。';\n")])])]),r("h4",{attrs:{id:"常见api-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常见api-2"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:"https://api.dart.dev/stable/2.10.4/dart-core/String-class.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("常见api"),r("OutboundLink")],1)]),a._v(" "),r("ul",[r("li",[a._v("contains, indexOf, startsWidth(), endsWidth(), substring, split(), toUpperCase(), toLowerCase(), trim()")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("String str = 'abcdefg'; \n\nstr.contains('abc'); // true\n\nstr.startsWidth('ab'); // true\n\nint.parse('42'); // 42\n\ndouble.parse('42.33'); \nnum.parse('42.33'); \nint.parse('42');\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("123.toString();\n")])])]),r("h4",{attrs:{id:"属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:"https://api.dart.dev/stable/2.10.4/dart-core/String-class.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("属性"),r("OutboundLink")],1)]),a._v(" "),r("ul",[r("li",[a._v("isEmpty， isNotEmpty, length")])]),a._v(" "),r("blockquote",[r("p",[a._v("''.isEmpty;  // true")])]),a._v(" "),r("h3",{attrs:{id:"list"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[a._v("#")]),a._v(" List")]),a._v(" "),r("p",[a._v("list就是常见的数组")]),a._v(" "),r("ul",[r("li",[a._v("创建一个list")])]),a._v(" "),r("blockquote",[r("p",[a._v("List arr = List(); List arr2 = [];")])]),a._v(" "),r("h4",{attrs:{id:"api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:"https://api.dart.dev/stable/2.10.4/dart-core/List-class.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("api"),r("OutboundLink")],1)]),a._v(" "),r("ul",[r("li",[a._v("add, addAll, clear, indexOf, remove, removeAt, removeLast")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("List<String> arr = [];\narr.add('a');\narr.addAll(['a','b']);\nprint(arr); // [a, a, b]\n\narr.clear();\nprint(arr); // []\n")])])]),r("h4",{attrs:{id:"属性-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:"https://api.dart.dev/stable/2.10.4/dart-core/List-class.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("属性"),r("OutboundLink")],1)]),a._v(" "),r("ul",[r("li",[a._v("first, last, length, reversed")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("List arr = ['1', '2', '3']\narr.first; // 返回第一个元素 '1'\narr.last;  // 返回最后一个元素 '3'\narr.reversed; // (3,2,1) 不再是个数组\n")])])]),r("h3",{attrs:{id:"set"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[a._v("#")]),a._v(" set")]),a._v(" "),r("p",[a._v("无序，元素唯一的集合（因为无序所以不能通过下标获取集合的值）")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var setList = Set();\nsetList.addAll(['gold', 'titanium', 'xenon']);\nassert(setList.length == 3);\n\n// 添加一个重复的key，没作用\nsetList.add('gold');\nassert(setList.length == 3);\n\nsetList.remove('xenon');\nassert(setList.length == 2);\n")])])]),r("ul",[r("li",[r("a",{attrs:{href:"https://api.dart.dev/stable/2.10.4/dart-core/Set-class.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("api，属性"),r("OutboundLink")],1)])]),a._v(" "),r("blockquote",[r("p",[a._v("first, last")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var setArr = Set.from(['a', 'b', 'c']);\nprint(setArr.first); // 'a'\n")])])]),r("blockquote",[r("p",[a._v("add, addAll, clear, intersection")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var bSetArr = Set.from(['a', 'b', 'c']);\nvar aSetArr = Set();\naSetArr.addAll(['c']);\nprint(bSetArr.intersection(aSetArr)); // c\n")])])]),r("h3",{attrs:{id:"map"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[a._v("#")]),a._v(" map")]),a._v(" "),r("p",[a._v("类似于常见的对象，一个无序的 key-value （键值对）集合。")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var hawaiianBeaches = {\n  'Oahu': ['Waikiki', 'Kailua', 'Waimanalo'],\n  'Big Island': ['Wailea Bay', 'Pololu Beach'],\n  'Kauai': ['Hanalei', 'Poipu']\n};\n")])])]),r("ul",[r("li",[r("a",{attrs:{href:"https://api.dart.dev/stable/2.10.4/dart-core/Map-class.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("常见属性&api"),r("OutboundLink")],1)])]),a._v(" "),r("blockquote",[r("p",[a._v("keys, values, isEmpty, length")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("print(hawaiianBeaches.keys); // ('Oahu', 'Big Island', 'Kauai')\nprint(hawaiianBeaches.values); \n")])])]),r("blockquote",[r("p",[a._v("containsKey, containsValue, addAll, add, map")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var mapObj = {\n    name: 'tom',\n    sex: 'man',\n    age: 23\n};\nmapObj.containsKey('name');\nmapObj.addAll({'class': 5, 'father': 'jan'});\nprint(mapObj); // {name: tom, sex: man, age: 23, class: 5, father: jan}\n")])])]),r("p",[a._v("参考："),r("a",{attrs:{href:"https://dart.cn/guides/libraries/library-tour#strings-and-regular-expressions",target:"_blank",rel:"noopener noreferrer"}},[a._v("dart中文网"),r("OutboundLink")],1),a._v("、"),r("a",{attrs:{href:"https://dartpad.cn/",target:"_blank",rel:"noopener noreferrer"}},[a._v("dart在线编辑器"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);