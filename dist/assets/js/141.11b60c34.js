(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{607:function(e,a,t){"use strict";t.r(a);var r=t(28),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"webpack动态导入及预加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack动态导入及预加载"}},[e._v("#")]),e._v(" webpack动态导入及预加载")]),e._v(" "),t("p",[e._v("使用webpack构建项目的时候，它提供了些许优化手段，其中常见的就是动态导入")]),e._v(" "),t("p",[e._v("webpack支持两种方式来实现动态代码分割 "),t("strong",[e._v("import()")]),e._v("，另一种就是 "),t("strong",[e._v("require.ensuure")])]),e._v(" "),t("h2",{attrs:{id:"import动态导入-代码分割"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#import动态导入-代码分割"}},[e._v("#")]),e._v(" import动态导入（代码分割）")]),e._v(" "),t("p",[e._v("原理：动态代码分割，可以将某个模块打包为一个单独的bundle.jd，减少单个js文件的体积。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("getComponent = async () => {\n  this.fetch_data();\n  const module = await import(/* webpackChunkName:\"createElement\" */ '@/utils/index');\n  module.createElement().then((component:any) => {\n    document.body.appendChild(component);\n  });\n};\n")])])]),t("p",[e._v("需要“Syntax Dynamic Import Babel Plugin”的支持")]),e._v(" "),t("h2",{attrs:{id:"预加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预加载"}},[e._v("#")]),e._v(" 预加载")]),e._v(" "),t("ul",[t("li",[e._v("preload")])]),e._v(" "),t("p",[e._v("加载当前页面会用到的模块，希望能提前加载，更快的响应")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import(/* webpackPreload: true */ 'ChartingLibrary');\n")])])]),t("ul",[t("li",[e._v("prefetch")])]),e._v(" "),t("p",[e._v("当前页面可能会用到的")]),e._v(" "),t("p",[e._v("em：点击按钮会出现弹窗（用户可能点击按钮，可能不点击）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import(/* webpackPrefetch: true */ 'LoginModal');\n")])])]),t("h3",{attrs:{id:"实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[e._v("#")]),e._v(" 实现原理")]),e._v(" "),t("p",[e._v("形成link标签")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<link rel="prefetch" href="comeModule.js" as="script">\n<link rel="prefetch" href="main.css" as="style">\n// or\n<link rel="preload" href="comeModule.js" as="script">\n')])])]),t("h3",{attrs:{id:"不同点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[e._v("#")]),e._v(" 不同点")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("preload加载的资源是当前页面肯定会用到的，而prefetch加载的资源是可能会用到的")])]),e._v(" "),t("li",[t("p",[e._v("preload的优先级较prefetch高（\npreload是在页面加载的早期阶段就开始获取，在浏览器的主渲染机制介入前就进行预加载\nprefetch是在浏览器空闲时才会去获取）")])]),e._v(" "),t("li",[t("p",[e._v("preload有同域限制（crossorigin），但是prefetch没有")])]),e._v(" "),t("li",[t("p",[e._v("当页面上使用到这个资源时候 preload 资源还没下载完，这时候不会造成二次下载，会等待第一次下载并执行脚本\n（而如果prefetch资源还在途中，再次发送请求，会导致二次请求，但是preload不会）")])]),e._v(" "),t("li",[t("p",[e._v("页面关闭了它就会立即停止 preload 获取资源，但是prefetch 发起的请求仍会进行不会中断。")])])]),e._v(" "),t("p",[t("strong",[e._v("note：")]),e._v(" 测试了chrome发现并不会阻塞页面的渲染（不会阻塞浏览器的onload事件）")]),e._v(" "),t("h2",{attrs:{id:"关于preload几点注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于preload几点注意"}},[e._v("#")]),e._v(" 关于preload几点注意")]),e._v(" "),t("ul",[t("li",[e._v("只是预加载，但是不执行")])]),e._v(" "),t("p",[e._v("使用prefetch/preload，只是提前了这个资源加载的时间点，但是并不会执行这个文件，所以针对资源该怎么使用还是怎么使用")]),e._v(" "),t("p",[e._v("以前的")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<link href="xx.css">\n和\n<script src="xxx.js">\n')])])]),t("p",[e._v("还是要写在相应的位置的，preload只是优化加载而已。")]),e._v(" "),t("p",[e._v("如果想在资源加载完之后立即执行，使用preload的onload事件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<link rel="preload" as="style" href="asyncstyle.css" onload="this.rel=\'stylesheet\'">\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<link rel="preload" as="script" href="async_script.js" onload="var script = document.createElement(\'script\'); script.src = this.href; document.body.appendChild(script);">\n')])])]),t("p",[e._v("如果preload与prefetch同时存在同一个资源，会到导致这个资源被加载两次。")]),e._v(" "),t("h3",{attrs:{id:"判断浏览器是否支持preload"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#判断浏览器是否支持preload"}},[e._v("#")]),e._v(" 判断浏览器是否支持preload")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("let relList = document.createElement('link').relList\nrelList.supports('preload');\n")])])]),t("h2",{attrs:{id:"对比http-2-push与preload"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对比http-2-push与preload"}},[e._v("#")]),e._v(" 对比HTTP/2 push与preload")]),e._v(" "),t("p",[e._v("两者关系应该是互补，都是通过提前加载页面资源的方式，提升页面响应速度。")]),e._v(" "),t("p",[t("strong",[e._v("不同点")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("发起主体不同：HTTP/2 push能够主动的向客户端推送其需要的资源（而不需要等到客户端请求），但是无法判断客户端是否有缓存；\npreload是在页面渲染早期，客户端向服务器器获取资源，如果有缓存则不会二次请求。")])]),e._v(" "),t("li",[t("p",[e._v("加载资源的范围：preload能任意指定预先加载的资源（第三方库）。")])]),e._v(" "),t("li",[t("p",[e._v("发起时间不同：HTTP/2 push的推送起点时间比preload要早（服务端一收到客户端的第一个请求就可以发起推送）；preload\n只当浏览器收到从服务端发来的HTML，解析后发现文件里有preload标签，才可以开启preload(当然也可以通过响应头部做处理)。")])]),e._v(" "),t("li",[t("p",[e._v("资源缓存不同：HTTP/2连接可以被多个标签间重用(push cache)，preload的资源是内存缓存的一部分\n内存缓存是与发起请求的页面有关，所以也就注定了preloaded的请求不能在页面间共享。")])])]),e._v(" "),t("p",[t("strong",[e._v("参考：")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.zcfy.cc/article/http-2-push-vs-http-preload-dexecure-4722.html?t=new",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP/2 PUSH(推送)与HTTP Preload(预加载)大比拼| Dexecure"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/48521680",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用 Preload/Prefetch 优化你的应用"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/32561606",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSS预加载Preload"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);