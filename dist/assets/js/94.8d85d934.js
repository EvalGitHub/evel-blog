(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{553:function(t,s,e){"use strict";e.r(s);var v=e(28),a=Object(v.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"常见的web攻击手段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见的web攻击手段"}},[t._v("#")]),t._v(" 常见的web攻击手段")]),t._v(" "),e("h2",{attrs:{id:"xss-cross-site-scripting-跨站脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss-cross-site-scripting-跨站脚本"}},[t._v("#")]),t._v(" xss（Cross Site Scripting）跨站脚本")]),t._v(" "),e("p",[e("strong",[t._v("原理：")]),t._v(" 是一种“HTML注入”，用户的数据被当成了HTML代码一部分来执行，从而混淆了原本的语义，产生了新的语义。")]),t._v(" "),e("p",[e("strong",[t._v("释义：")]),t._v(" xss常常发生在目标用户的"),e("strong",[t._v("浏览器层面")]),t._v("上，当用户浏览器渲染整个HTML文档的时候出现了"),e("strong",[t._v("不被预期的脚本指令并执行")]),t._v("时候，xss就会发生。（采取一段远程或者第三方域上的脚本资源）\nem:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<script src="http://www.moumou.com/**.js"><\/script>  \n')])])]),e("p",[e("strong",[t._v("原因：")])]),t._v(" "),e("blockquote",[e("p",[t._v("虽然xss.js文件资源在其他服务器上，但是脚本内容却属于对象所在的浏览器上下文环境中。这样就可以盗取用户身份认证信息，篡改用户数据...")])]),t._v(" "),e("p",[t._v("举一个获取用户信息的例子：")]),t._v(" "),e("p",[t._v("在前端我们通常会使用cookie来存取用户的认证信息，如果没有做httpOnly设置的情况下是很容易被盗取，只需要诱导用户点击一个特殊处理的图片或者链接，然后在通过document.cookie获取cookie进而控制用户账户权限去做一些破坏事情。")]),t._v(" "),e("p",[e("strong",[t._v("分类：")])]),t._v(" "),e("ol",[e("li",[t._v("反射型xss（非持久型）")])]),t._v(" "),e("p",[t._v("出现在URL中，输入提交到服务器，最后浏览器解析执行。")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("存储型（持久性）")])]),t._v(" "),e("p",[t._v("提交的xss代码会存储在服务器（数据库，内存，或者是文件系统），下次请求目标页面不需要提交xss代码。")]),t._v(" "),e("p",[t._v("典型的例子：评论区，留言板，用户提交一条包含xss代码留言保存在数据库，每一次用户查看留言板的时候都会执行这个xss攻击。")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("DOM xss")])]),t._v(" "),e("p",[t._v("不需要浏览器参与，靠的就浏览器的DOM解析。")]),t._v(" "),e("h3",{attrs:{id:"xss的防御"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss的防御"}},[t._v("#")]),t._v(" xss的防御")]),t._v(" "),e("ol",[e("li",[t._v("HtmlEncode ，javascriptEncode")])]),t._v(" "),e("blockquote",[e("p",[t._v("除数字，字母之外其他所有的特殊字符都会被编码成HTMLEntities")])]),t._v(" "),e("p",[t._v("所有标签中输出的变量如果没做任何处理可能会直接导致XSS")]),t._v(" "),e("ul",[e("li",[t._v("案例一：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$var = "> <script> alert(\'/xsss/\')<\/script> <"\n<div id="abc" name="$var"></div>\n')])])]),e("p",[t._v("变成")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<div id="abc" name=""> <script> alert(\'/xsss/\')<\/script> <""></div>\n')])])]),e("ul",[e("li",[t._v("案例二：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<script> var x= '$var' <\/script>\n\n攻击方式：\n\n$var = '> alert('xss'); ' \n<script> var x= ''> alert('xss'); '' <\/script>\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("在地址中输出，使用URLEncode编码")])]),t._v(" "),e("p",[t._v("会将字符串转换为“%HH”的形式，")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<a href="http://www.evil.com/?test=$var">test</a>\n\n可能存在的攻击是：\n\n<a href="http://www.evil.com/?test=" onclick=alert(\'xss\')" ">test</a>\n')])])]),e("p",[t._v("但是经过编码(encodeURIComponent)之后")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<a href="http://www.evil.com/?test="%20onclick%3Dalert(\'xss\')">test</a>\n')])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("处理富文本")])]),t._v(" "),e("p",[t._v("如何区分安全的“富文本”和有攻击的XSS？")]),t._v(" "),e("p",[t._v("富文本不应该包括“事件”，以及一些危险的标签“iframe， script，base，form”")]),t._v(" "),e("h2",{attrs:{id:"csrf-跨站请求伪造"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csrf-跨站请求伪造"}},[t._v("#")]),t._v(" CSRF 跨站请求伪造")]),t._v(" "),e("p",[e("strong",[t._v("原理：")]),t._v(" 获取用户的登录凭证，预测到一些重要参数从而伪造了请求。")]),t._v(" "),e("p",[t._v("关键点：")]),t._v(" "),e("ul",[e("li",[t._v("来自其他站点的请求")])]),t._v(" "),e("blockquote",[e("p",[t._v("em: 目标网站的删除文章功能收到来自恶意网站客户端发出的删除文章的请求，这个请求就是跨站点的请求。")])]),t._v(" "),e("ul",[e("li",[t._v("并且这个请求是伪造的，之所以能伪造是因为用户能猜测到请求相关的参数（em：id，usename）")])]),t._v(" "),e("h3",{attrs:{id:"csrf的防御"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csrf的防御"}},[t._v("#")]),t._v(" CSRF的防御")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("验证码")])])]),t._v(" "),e("p",[e("strong",[t._v("原理：")]),t._v(" CSRF攻击过程往往是用户不知道情况下构造了网络请求，而验证码则强制用户必须与应用进行交互才能\n完成请求。")]),t._v(" "),e("p",[e("strong",[t._v("缺陷：")]),t._v(" 但是只是一种辅助手段，不能做为主要的解决方案。")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("strong",[t._v("referer check")])])]),t._v(" "),e("p",[e("strong",[t._v("原理：")]),t._v(" 页面与页面之间存在一定的逻辑关系，通过referer字段能够清晰的知道发送请求是来自那个域名（网站）")]),t._v(" "),e("p",[e("strong",[t._v("缺陷：")]),t._v(" 服务器并不是总是能取到Referer")]),t._v(" "),e("ul",[e("li",[t._v("有些应用出于对用户隐私保护的考虑限制了referer的发送；")]),t._v(" "),e("li",[t._v("HTTPS跳转到Http，浏览器出于安全考虑也不会发送referer；")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("strong",[t._v("token")])])]),t._v(" "),e("p",[e("strong",[t._v("CSRF之所以能攻击成功的因为之一是因为：重要的参数都是可以被攻击者猜测到")])]),t._v(" "),e("p",[t._v("常见的解决方案是对参数进行加密或者混淆，但是这会使得URL变得非常难度，每次加密参数的改变导致链接无法被收藏。\n所以我们需要使用一个新的参数token,这个token是随机的不可预测的。")]),t._v(" "),e("p",[t._v("Token是用户与服务器所共有的，第三者是无从知晓的；tonken一般存在于cookie中。")]),t._v(" "),e("p",[e("strong",[t._v("如果页面同时存在xss，则CSRF的Token防御是无法成功的")])]),t._v(" "),e("h2",{attrs:{id:"界面操作劫持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#界面操作劫持"}},[t._v("#")]),t._v(" 界面操作劫持")]),t._v(" "),e("p",[e("strong",[t._v("释意：")]),t._v(" 界面劫持攻击是一种基于"),e("strong",[t._v("视觉欺骗")]),t._v("的web会话攻击，他通过在网页的"),e("strong",[t._v("可见输入控件上覆盖一个不可见的框")]),t._v("， 使得用户误以为在操作可见控件，实际操作被不可见框所劫持，执行恶意代码，完成用户信息窃取，篡改数据。")]),t._v(" "),e("p",[e("strong",[t._v("分类：")])]),t._v(" "),e("ol",[e("li",[t._v("点击劫持")])]),t._v(" "),e("ul",[e("li",[t._v("劫持用户的鼠标点击操作，劫持目标一般是重要的交互会话界面（银行交易界面，用户管理后台页面，麦克风摄像头）")])]),t._v(" "),e("blockquote",[e("p",[t._v("em：一个登录页面上有用户名，密码，登录按钮，通过iframe + opacity等手段，可以在这个登录页面上覆盖一层透明的用户不可见的网页，用于收集用户的密码，进而获取用户的数据。")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("拖放劫持")])]),t._v(" "),e("p",[t._v("劫持鼠标的拖动行为，常常发生在一些拖动小游戏上，以及用户通过拖放来代替复制和粘贴的操作")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("触屏劫持")])]),t._v(" "),e("p",[t._v("对用户触摸屏操作的攻击劫持")]),t._v(" "),e("p",[e("strong",[t._v("实现手段：")]),t._v(" 透明层 + iframe")]),t._v(" "),e("blockquote",[e("p",[t._v("在用户可见的页面上覆盖一个不可见的框（z-index , opacity实现），通过iframe来嵌入被劫持的页面，到达视觉欺骗，即用户实际操作的对象与他们看到的对象是不一致的。")])]),t._v(" "),e("h2",{attrs:{id:"神奇的dom渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#神奇的dom渲染"}},[t._v("#")]),t._v(" 神奇的DOM渲染")]),t._v(" "),e("p",[e("strong",[t._v("HTML 的自解码机制")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<input type="button" id="exec_btn" value="exec" onclick="document.write(\'&lt;img src=@ onerror=alert(124) /&gt;\')">\n')])])]),e("p",[t._v("点击浏览器就会弹出弹窗，onclick里的js出现在HTML标签中却被正确解析，说明js可以进行HTML形式的编码。")]),t._v(" "),e("p",[t._v("反过来如果我们在js中则不会出现预期效果")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<input type="button" id="exec_btn" value="exec" />\n\n<script>\n  funciton $(id) return document.getElementById(id);\n  $(\'exec_btn\').onClick = function () {\n    document.write(\'&lt;img src=@ onerror=alert(124) /&gt;\');\n  }\n<\/script>\n')])])]),e("p",[t._v("因为此时用户输入的内容需要遵循js编码法则")]),t._v(" "),e("ul",[e("li",[t._v("Unicode形势")]),t._v(" "),e("li",[t._v("十六进制")]),t._v(" "),e("li",[t._v("纯转义： ', \" , < ,  > 这种字符加 “\\”转义")])])])}),[],!1,null,null,null);s.default=a.exports}}]);