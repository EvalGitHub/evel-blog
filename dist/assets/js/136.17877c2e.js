(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{599:function(e,n,t){"use strict";t.r(n);var a=t(28),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"webpack多页打包实现-以及多配置同时运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack多页打包实现-以及多配置同时运行"}},[e._v("#")]),e._v(" webpack多页打包实现,以及多配置同时运行")]),e._v(" "),t("h2",{attrs:{id:"实现多页打包的功能需要如下步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现多页打包的功能需要如下步骤"}},[e._v("#")]),e._v(" "),t("strong",[e._v("实现多页打包的功能需要如下步骤")])]),e._v(" "),t("p",[e._v("1）多个入口（entry里面配置多个入口）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("entry: {\n  index: './index.tsx',\n  list: './list.tsx'\n},\n")])])]),t("p",[e._v("2）设置多个HtmlWebpackPlugin")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("new HtmlWebpackPlugin({\n  template: '../index.html', // 文件模板\n  filename: 'index.html', // 生成的文件名\n  chunks: ['vendors', 'index'] // 需要引入的模块js\n}),\nnew HtmlWebpackPlugin({\n  template: '../index.html', // 文件模板\n  filename: 'list.html', // 生成的文件名\n  chunks: ['vendors', 'list'] // 需要引入的模块js\n}),\n")])])]),t("p",[e._v("**template：**是多页配置的文件模板")]),e._v(" "),t("p",[e._v("**filename：**生成的文件名")]),e._v(" "),t("p",[t("strong",[e._v("chunks")]),e._v("：可以配置需要的模块js")]),e._v(" "),t("p",[e._v("只需要设置以上两个步骤即可实现多页面打包，但是问题是如果每一次新增加一个文件入口，都需要重新更改plugins是很麻烦的？")]),e._v(" "),t("p",[e._v("因此可以做如下的优化：")]),e._v(" "),t("p",[e._v("明确一点是HtmlWebpackPlugin的配置是根据entry中的数据息息相关。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("let config = {\n  context: path.resolve(__dirname, '../src'),\n  entry: {\n    index: './index.tsx',\n    list: './list.tsx'\n  },\n  ....\n  ....\n  ....\n};\nfunction mutipleEntry (config) {\n  Object.keys(config.entry).forEach((item) => {\n    plugins.push(\n      new HtmlWebpackPlugin({\n        template: '../index.html', // 文件模板\n        filename: `${item}.html`, // 生成的文件名\n        chunks: ['vendors', `${item}`] // 需要引入的模块js\n      }),\n    )\n  })\n  return plugins;\n};\nconfig.plugins = mutipleEntry(config);\nmodule.exports = config;\n")])])]),t("h2",{attrs:{id:"多个webpack的不同配置同时并行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多个webpack的不同配置同时并行"}},[e._v("#")]),e._v(" 多个webpack的不同配置同时并行")]),e._v(" "),t("p",[e._v("如果项目中存在多个webpack的不同配置，想同时并行运行，这个时候我们可以使用 "),t("a",{attrs:{href:"https://www.npmjs.com/package/parallel-webpack",target:"_blank",rel:"noopener noreferrer"}},[e._v("parallel-webpack"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.webpackjs.com/loaders/thread-loader/",target:"_blank",rel:"noopener noreferrer"}},[e._v("thead-loade"),t("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=s.exports}}]);