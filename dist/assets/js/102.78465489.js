(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{559:function(t,v,_){"use strict";_.r(v);var a=_(28),e=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"web优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#web优化"}},[t._v("#")]),t._v(" web优化")]),t._v(" "),_("h6",{attrs:{id:"web性能有很多可以优化-大致分为-度量标准-编码优化-静态资源优化-交付优化-构建优化-性能检测-。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#web性能有很多可以优化-大致分为-度量标准-编码优化-静态资源优化-交付优化-构建优化-性能检测-。"}},[t._v("#")]),t._v(" web性能有很多可以优化 ，大致分为： "),_("strong",[t._v("'度量标准'， '编码优化'， '静态资源优化', '交付优化'， ‘构建优化’， ‘性能检测’。")])]),t._v(" "),_("h2",{attrs:{id:"度量标准-设定目标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#度量标准-设定目标"}},[t._v("#")]),t._v(" 度量标准，设定目标")]),t._v(" "),_("h4",{attrs:{id:"度量标准"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#度量标准"}},[t._v("#")]),t._v(" 度量标准：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("首次有效绘制（FMP，First Meaningful Paint）")]),t._v(" "),_("p",[t._v("当主要内容呈现在页面上")])]),t._v(" "),_("li",[_("p",[t._v("可交互时间（Time to Interactive）")]),t._v(" "),_("p",[t._v("页面布局已经稳定，关键的页面字体是可见的，并且进程可用于用户输入，用户可以点击UI并输入所需的时间")])]),t._v(" "),_("li",[_("p",[t._v("输入响应")]),t._v(" "),_("p",[t._v("洁面后响应用户输入所属的时间")])]),t._v(" "),_("li",[_("p",[t._v("感知速度指数 （Perceptual Speed Index，简称PSI，测量页面在加载过程中视觉上的变化速度，分数越低越好）")])])]),t._v(" "),_("h4",{attrs:{id:"设定目标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#设定目标"}},[t._v("#")]),t._v(" 设定目标：")]),t._v(" "),_("ul",[_("li",[t._v("100毫秒的界面响应时间与60FPS")]),t._v(" "),_("li",[t._v("速度指标（Speed Index）小于1250ms")]),t._v(" "),_("li",[t._v("3G网络环境下可交互时间小于5s")]),t._v(" "),_("li",[t._v("重要文件的大小预算小于170kb")])]),t._v(" "),_("p",[t._v("详细信息请查看RAIL性能模型")]),t._v(" "),_("h2",{attrs:{id:"编码优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#编码优化"}},[t._v("#")]),t._v(" 编码优化")]),t._v(" "),_("p",[t._v("编码优化涉及到应用运行时的性能")]),t._v(" "),_("h4",{attrs:{id:"数据读取速度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据读取速度"}},[t._v("#")]),t._v(" 数据读取速度")]),t._v(" "),_("ul",[_("li",[t._v("字面量与局部变量的访问速度最快，数组元素和对象成员相对较慢")]),t._v(" "),_("li",[t._v("变量从局部作用域到全局作用域的搜索过程越长速度越慢")]),t._v(" "),_("li",[t._v("对象嵌套的越深，读取速度就越慢")]),t._v(" "),_("li",[t._v("对象在原型链中存在的位置越深，找到它的速度就越慢")])]),t._v(" "),_("h5",{attrs:{id:"dom"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),_("p",[t._v("应用在运行时，性能的瓶颈主要在于DOM操作的代价非常昂贵，下面列出一些关于DOM操作相关提升性能的建议：")]),t._v(" "),_("ul",[_("li",[t._v("在JS中对DOM进行访问的代价非常高。请尽可能减少访问DOM的次数（建议缓存DOM属性和元素、把DOM集合的长度缓存到变量中并在迭代中使用。读变量比读DOM的速度要快很多。）")]),t._v(" "),_("li",[t._v("重排与重绘的代价非常昂贵。如果操作需要进行多次重排与重绘，建议先让元素脱离文档流，处理完毕后再让元素回归文档流，这样浏览器只会进行两次重排与重绘（脱离时和回归时）。")]),t._v(" "),_("li",[t._v("善于使用事件委托")])]),t._v(" "),_("h4",{attrs:{id:"流程控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[t._v("#")]),t._v(" 流程控制")]),t._v(" "),_("ul",[_("li",[t._v("避免使用for...in（它能枚举到原型，所以很慢）")]),t._v(" "),_("li",[t._v("减少迭代的次数")]),t._v(" "),_("li",[t._v("基于循环的迭代比基于函数的迭代快8倍")]),t._v(" "),_("li",[t._v("用Map表代替大量的if-else和switch会提升性能")])]),t._v(" "),_("h2",{attrs:{id:"静态资源优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#静态资源优化"}},[t._v("#")]),t._v(" 静态资源优化")]),t._v(" "),_("ul",[_("li",[t._v("静态资源进行压缩")]),t._v(" "),_("li",[t._v("CDN，浏览器缓存")]),t._v(" "),_("li",[t._v("异步无阻塞加载JS 【js加载与执行会阻塞渲染，可以将Script标签放到页面的最底部。但是更好的做法是异步无阻塞加载JS】defer、async、动态创建script标签、使用XHR异步请求JS代码并注入到页面。")])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://www.cnblogs.com/evaling/p/10677566.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/evaling/p/10677566.html"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"交付优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#交付优化"}},[t._v("#")]),t._v(" 交付优化")]),t._v(" "),_("p",[t._v("使用Intersection Observer实现懒加载")]),t._v(" "),_("ul",[_("li",[t._v("可以通过Intersection Observer延迟加载图片、视频、广告脚本、或任何其他资源。")]),t._v(" "),_("li",[t._v("可以先加载低质量或模糊的图片，当图片加载完毕后再使用完整版图片替换它")])]),t._v(" "),_("blockquote",[_("p",[t._v("延迟加载所有体积较大的组件、字体、JS、视频或Iframe是一个好主意")])]),t._v(" "),_("ul",[_("li",[t._v("快速响应的用户界面")])]),t._v(" "),_("p",[t._v("将一个大任务拆分成多个小任务分布在不同的Macrotask中执行（通俗的说是将大的JS任务拆分成多个小任务异步执行）。或者使用WebWorkers，它可以在UI线程外执行JS代码运算，不会阻塞UI线程，所以不会影响用户体验。")]),t._v(" "),_("h2",{attrs:{id:"构建优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#构建优化"}},[t._v("#")]),t._v(" 构建优化")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("webpack构建Tree-shaking、Code-splitting")])]),t._v(" "),_("li",[_("p",[t._v("服务端渲染（SSR）")])]),t._v(" "),_("li",[_("p",[t._v("按需加载， 使用import函数动态导入模块")])]),t._v(" "),_("li",[_("p",[t._v("使用HTTP缓存头")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://mp.weixin.qq.com/s/C2Zx3KPNPkgj-aHnOY43Iw",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mp.weixin.qq.com/s/C2Zx3KPNPkgj-aHnOY43Iw"),_("OutboundLink")],1)])])])])}),[],!1,null,null,null);v.default=e.exports}}]);