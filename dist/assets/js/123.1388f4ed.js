(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{586:function(t,e,a){"use strict";a.r(e);var s=a(28),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"搭建环境react-webapck-typescript问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搭建环境react-webapck-typescript问题"}},[t._v("#")]),t._v(" 搭建环境react,webapck,typescript问题")]),t._v(" "),a("h2",{attrs:{id:"使用tsloader之后不能识别div-h1-p等html元素标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用tsloader之后不能识别div-h1-p等html元素标签"}},[t._v("#")]),t._v(" 使用tsLoader之后不能识别div，h1，p等html元素标签")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm i typescript -g  \nnpm link typescript\n")])])]),a("h2",{attrs:{id:"修改代码之后不想重新刷新浏览器-需要热更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改代码之后不想重新刷新浏览器-需要热更新"}},[t._v("#")]),t._v(" 修改代码之后不想重新刷新浏览器，需要热更新")]),t._v(" "),a("ol",[a("li",[t._v("启动webpack-devserver hot:true")]),t._v(" "),a("li",[t._v("new webpack.HotModuleReplacementPlugin()")]),t._v(" "),a("li",[t._v("引入如下代码")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("if(module.hot) {\n    module.hot.accept(() => {\n        // to nothong\n    })\n}\n")])])]),a("h2",{attrs:{id:"在使用ts之后提示module上没有hot属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在使用ts之后提示module上没有hot属性"}},[t._v("#")]),t._v(" 在使用ts之后提示module上没有hot属性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install --save-dev @types/webpack-env\n")])])]),a("h2",{attrs:{id:"css-loader-模块化-module-true-不生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-loader-模块化-module-true-不生效"}},[t._v("#")]),t._v(" css-loader 模块化（module:true）不生效？")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("use: [\n    'style-loader',\n    {\n    loader: 'css-loader',\n        options: {\n        \timportLoaders:2,\n       \t \tmodules: true,\n        }\n\t},\n")])])]),a("p",[t._v("这样之后我们就可以在组件中导入scss/css文件了")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const styles = require(@/scss/login/index.scss); \n")])])]),a("p",[t._v("使用方式：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<button className={[`${styles.login_btn}`, `${this.state.canLogin ?  styles.active : ' '}`].join(' ')} onClick={this.login.bind(this)} >立即登录</button>\n....\n<p className={styles.login_nav}>登录</p>\n")])])]),a("p",[t._v("值得注意的是如果你使用ESModule的方式引入样式文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import  * as styles from '@/scss/login/index.scss';\n")])])]),a("p",[t._v("ts会提醒你，Can't find index.scss 模块，")]),t._v(" "),a("blockquote",[a("p",[t._v("**reason：**TypeScript does not know that there are files other than "),a("code",[t._v(".ts")]),t._v("or "),a("code",[t._v(".tsx")]),t._v(" so it will throw an error if an import has an unknown file suffix.")])]),t._v(" "),a("p",[t._v("参考链接：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/40382842/cant-import-css-scss-modules-typescript-says-cannot-find-module?r=SearchResults",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://stackoverflow.com/questions/40382842/cant-import-css-scss-modules-typescript-says-cannot-find-module?r=SearchResults"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("解决方法： 需求新建一个 "),a("strong",[t._v("declaration.d.ts")]),t._v("文件，写入一下代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("declare module '*' \n")])])]),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qq_20473985/article/details/79132787",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/qq_20473985/article/details/79132787"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/5109ac3f593b",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/5109ac3f593b"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"webpack的alias路径简化总是提醒找不到模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack的alias路径简化总是提醒找不到模块"}},[t._v("#")]),t._v(" webpack的alias路径简化总是提醒找不到模块")]),t._v(" "),a("p",[t._v("例如： ‘@/common/toast’ 提醒找不到,在tsconfig.json中设置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n  .......\n  "baseUrl": ".",\n  "paths": {\n    "@/*": ["./src/*"]\n  }\n  .....\n}    \n')])])]),a("h2",{attrs:{id:"css不支持单行注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css不支持单行注释"}},[t._v("#")]),t._v(" css不支持单行注释")]),t._v(" "),a("p",[t._v("em: // margin: 20px")]),t._v(" "),a("p",[t._v("但是可以使用 /* margin：20px  */")]),t._v(" "),a("p",[t._v("需要在postscss loader中配置postcss-scss")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n  loader: 'postcss-loader',\n  options: {\n  parser: 'postcss-scss',\n    plugin: [\n    require('autoprefixer')\n    ]\n  }\n}\n")])])]),a("h2",{attrs:{id:"关于热更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于热更新"}},[t._v("#")]),t._v(" 关于热更新")]),t._v(" "),a("p",[t._v("为了能在改动代码的时候我们能很舒服的观察到浏览器上的变化，需要使用webpack的热更新。\n需要注意的是热更新只需要在开发环境进行配置。")]),t._v(" "),a("p",[t._v("webpack.dev.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("plugins: [\n  new webpack.HotModuleReplacementPlugin(),\n]\n")])])]),a("p",[t._v("另外需要在入口文件通常是inde.tsx/app.tsx加入以下代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("if (module.hot) {\n  module.hot.accept(() => {\n    console.log('app 更新了');\n  });\n}\n")])])]),a("p",[t._v("至此已经完成了简单的热更新，在修改css文件的时候不需要重新reload整个浏览器就可以看到变化，但是对于js文件的变更，好像还是会重新刷新整个浏览器。")]),t._v(" "),a("p",[a("strong",[t._v("解决方案：")]),t._v(" react-hot-loader")]),t._v(" "),a("p",[a("strong",[t._v("具体配置方式：")])]),t._v(" "),a("ol",[a("li",[t._v("index.tsx")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import { hot } from 'react-hot-loader/root';\nclass App extends React.Component {\n  render() {\n    return (\n      <AppRouteConfig/>\n    );\n  }\n}\nhot(App); // @1\nif (module.hot) {\n  module.hot.accept(() => {\n    console.log('app 更新了');\n  });\n}\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("还需要修改webpack.common.config.js的plugin")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("entry: {\n  main: [\n    \"react-hot-loader/patch\", // @2\n    './index.tsx'\n  ],\n},\n....\n{\n  loader: 'babel-loader',\n  options: {\n    babelrc: false,\n    presets: ['@babel/preset-env', '@babel/preset-react'],\n    plugins: ['react-hot-loader/babel'] // @3\n  },\n}\n")])])]),a("p",[a("a",{attrs:{href:"http://gaearon.github.io/react-hot-loader/getstarted/",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-hot-loader使用"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("值得注意的几个问题：")]),t._v(" "),a("p",[a("strong",[t._v("note:")]),t._v(" react-hot-loader只支持同步加载的组件，不支持懒加载的组件")]),t._v(" "),a("p",[a("strong",[t._v("warning:")]),t._v(" 你可能会遇到这个问题“component appears to be a function component that returns a class instance”")]),t._v(" "),a("p",[t._v("解决方案：安装"),a("a",{attrs:{href:"https://github.com/gaearon/react-hot-loader#hot-loaderreact-dom",target:"_blank",rel:"noopener noreferrer"}},[t._v("@hot-loader/react-dom"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("然后作如下修改：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("module.exports = {\n  // ...\n  resolve: {\n    alias: {\n      'react-dom': '@hot-loader/react-dom',\n    },\n  },\n};\n")])])]),a("h2",{attrs:{id:"关于使用react-router刷新回到首页的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于使用react-router刷新回到首页的问题"}},[t._v("#")]),t._v(" 关于使用react-router刷新回到首页的问题")]),t._v(" "),a("ol",[a("li",[t._v("Redirect必须放在所有的route之后")]),t._v(" "),a("li",[t._v("使用Switch组件")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<Router>\n  <Switch>\n    {\n      routes.map((itemRoute, key) => {\n        return <Route path={itemRoute.path} key={key} component={itemRoute.component}/>;\n      })\n    }\n    <Redirect exact from="/" to="/manage/works"></Redirect>\n  </Switch>\n</Router>\n')])])]),a("h2",{attrs:{id:"本地打包之后图片路径总是不对"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地打包之后图片路径总是不对"}},[t._v("#")]),t._v(" 本地打包之后图片路径总是不对？")]),t._v(" "),a("p",[a("strong",[t._v("可能原因：")])]),t._v(" "),a("ol",[a("li",[t._v("重复添加url-loader，优先排查webpack.common.config.js 和webpack.dev.config.js")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n  test: /\\.(png|svg|jpg|gif)$/,\n  use: [\n    {\n      loader: 'url-loader',\n      options: {\n        outputPath: 'assets/',\n        publicPath:  `${config.buildtime.cdn_path}assets`,\n        limit: 20024, // 20kb(20*1024)\n        name: '[name].[ext]'\n      }\n    }\n  ]\n}\n")])])]),a("p",[t._v("public一般会用在图片资源上传七牛的时候用到")]),t._v(" "),a("h2",{attrs:{id:"实现tree-shaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现tree-shaking"}},[t._v("#")]),t._v(" 实现tree shaking")]),t._v(" "),a("p",[t._v("在项目中会使用很多第三库，但是有时候我们只是使用了其中的部分方法，如果不做特殊处理的话，会将整个库进行打包，这是十分\n没有必要的，针对这个问题，webpack提出了treeShaking的思路。")]),t._v(" "),a("p",[a("strong",[t._v("前提：必须是esmodule的形式引入文件，commonJs的形式不支持；因为esmodule的静态化，在编译时候(决定import 不能放在执行代码中)确定模块之间的以来关系，以及输入输出变量。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/evaling/p/10341112.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("js的模块化规范"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("配置方式：")]),t._v(" "),a("ol",[a("li",[t._v("修改package.json")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('  "sideEffects": false 或者 ["*.css", "*.scss"],\n')])])]),a("p",[t._v("如果配置成false，则对所有的import引入都做tree shaking，如果是数组则是避免tree shaking的处理")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("配置webpack的配置(如果是生产环境则不需要处理（默认配置）)")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" optimization: {\n    usedExports: true \n  }\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);