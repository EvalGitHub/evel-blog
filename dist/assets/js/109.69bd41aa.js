(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{566:function(t,a,e){"use strict";e.r(a);var r=e(28),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"angularjs脏值检查的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#angularjs脏值检查的原理"}},[t._v("#")]),t._v(" angularjs脏值检查的原理")]),t._v(" "),e("p",[t._v("在使用angularJS的时候，$scope用来定义变量，当我们使用angularjs的指令\nng-click, ng-mouse，ng-click, ng-modal, ng-keyup等方法更新$scope上的变量时，\n会触发视图的更新，因为这些angular的内部指令封装了$apply。")]),t._v(" "),e("p",[t._v("但是如果是使用原生方法去修改了$scope上的变量则会发现视图并没有得到更新，这个时候我们会使用 "),e("strong",[t._v("$scope.$apply")]),t._v(" 来解决这个问题。")]),t._v(" "),e("p",[t._v("分析其实现原理：")]),t._v(" "),e("h3",{attrs:{id:"使用-watch建立绑定关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-watch建立绑定关系"}},[t._v("#")]),t._v(" 使用$watch建立绑定关系")]),t._v(" "),e("p",[t._v("当一个作用域创建的时候，angular会去解析当前作用域下的模板结构，寻找动态插值\n或者函数调用的地方，并用$watch建立绑定，对应的信息被绑定到angular内部的一个\nwatcher中，他是一个队列（数组）。")]),t._v(" "),e("h3",{attrs:{id:"digest遍历递归watcher数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#digest遍历递归watcher数组"}},[t._v("#")]),t._v(" $digest遍历递归watcher数组")]),t._v(" "),e("p",[t._v("脏值检查的核心就是 "),e("strong",[t._v("$digest循环")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("当用户执行某些操作之后，angular就会执行$digest遍历整个数组，并用一个dirty（默认为true）变量记录watchers里面那些$scope属性是否有变化（取出属性的oldVal和newVal进行对比，如果有变化用新值代替就值）。")])]),t._v(" "),e("li",[e("p",[t._v("当有变化的时候dirty设置为true，在$digest执行结束时候会再次检查dirty，如果还是为true，他会再次执行$digest，直到dirty为false（如果递归执行次数超过10次，会直接抛出错误，并挑出循环）。")])])]),t._v(" "),e("h3",{attrs:{id:"将变化后的-scope重新渲染到界面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将变化后的-scope重新渲染到界面"}},[t._v("#")]),t._v(" 将变化后的$scope重新渲染到界面")]),t._v(" "),e("p",[t._v("当递归流程执行结束之后，$digest会将变化后的$scope重新渲染到界面上")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/6844903617992851463#heading-0",target:"_blank",rel:"noopener noreferrer"}},[t._v("angular脏检查原理及伪代码实现"),e("OutboundLink")],1),t._v("，")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/xufei/Make-Your-Own-AngularJS/blob/master/01.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解angularJs"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);