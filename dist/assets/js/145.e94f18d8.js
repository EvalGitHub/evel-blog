(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{616:function(e,t,a){"use strict";a.r(t);var c=a(28),s=Object(c.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"js内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js内存管理"}},[e._v("#")]),e._v(" js内存管理")]),e._v(" "),a("p",[e._v("js具备自动回收机制")]),e._v(" "),a("h2",{attrs:{id:"js垃圾回收的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js垃圾回收的原理"}},[e._v("#")]),e._v(" js垃圾回收的原理")]),e._v(" "),a("h2",{attrs:{id:"回收策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回收策略"}},[e._v("#")]),e._v(" 回收策略")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("标记清除")])]),e._v(" "),a("li",[a("p",[e._v("引用计数")])])]),e._v(" "),a("p",[e._v("当声明了一个变量a并将一个引用类型值（{name:'cc'}）赋给该变量时，则这个值的引用次数就是1，如果a（{name:'cc'}）又赋给另一个变量b，则该值的引用次数加1。反之，如果a赋值{name:'xx'}，则{name:'cc'}这个值的引用次数减1。当{name:'cc'}这个值的引用的次数变为0时，则说明没有办法再访问{name:'cc'}这个值了，因而可以将其占用的内存空间回收。这样，当垃圾回收器工作的时候，{name:'cc'}这个值占用的内存空间就会被回收。")]),e._v(" "),a("p",[e._v("但是有一个严重问题：循环引用。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function circleReferenceProbem(){\n  let objectA = new Object()\n  let objectB = new Object()\n\n  objectA.someOtherObject = objectB\n  objectB.anotherObject = objectA\n}\n")])])]),a("p",[e._v("执行这个函数后，因为这两个引用值的引用次数永远不会为0，垃圾回收器永远不会回收它们占用的内存空间。")])])}),[],!1,null,null,null);t.default=s.exports}}]);