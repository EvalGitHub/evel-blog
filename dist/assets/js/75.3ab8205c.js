(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{526:function(e,t,r){"use strict";r.r(t);var n=r(28),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"mob-react的使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mob-react的使用"}},[e._v("#")]),e._v(" mob-react的使用")]),e._v(" "),r("h2",{attrs:{id:"使用注意"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用注意"}},[e._v("#")]),e._v(" 使用注意")]),e._v(" "),r("ul",[r("li",[e._v("如果项目中存在class components就使用mobx-react@5")]),e._v(" "),r("li",[e._v("如果项目中既有class components 和 hooks就使用mobx-react@6 (包含mobx-react-lite)")]),e._v(" "),r("li",[e._v("如果项目中没有class components就使用mobx-react-lite")])]),e._v(" "),r("p",[r("strong",[e._v("note：")])]),e._v(" "),r("blockquote",[r("p",[e._v("The Provider/inject in mobx-react@6 has been migrated to React Context, however it might be removed in future versions completely. Consider using Context directly.")])]),e._v(" "),r("h2",{attrs:{id:"状态管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[e._v("#")]),e._v(" 状态管理")]),e._v(" "),r("h3",{attrs:{id:"创建state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建state"}},[e._v("#")]),e._v(" 创建state")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("import { observable } from 'mobx'\nimport { useLocalStore } from 'mobx-react' // 6.x or mobx-react-lite@1.4.0\nfunction CreatingState() {\n  const simpleState = React.useRef(observable.array([1, 2, 3])).current\n  const localState = useLocalStore(() => ({\n    count: 0,\n    inc() {\n      localState.count += 1\n    },\n  }))\n  return <Rendering simple={simpleState}  local={localState} />\n}\n")])])]),r("h3",{attrs:{id:"获取state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#获取state"}},[e._v("#")]),e._v(" 获取state")]),e._v(" "),r("p",[r("strong",[e._v("方式一：")]),e._v(" 创建state，通过useReducer\n"),r("strong",[e._v("方式二：")]),e._v(" 创建state，通过props传递\n"),r("strong",[e._v("方式三：")]),e._v(" 全局创建，然后在需要使用的地方import\n"),r("strong",[e._v("方式四：")]),e._v(" 使用React.context")]),e._v(" "),r("p",[r("strong",[e._v("useLocalStore")])]),e._v(" "),r("p",[e._v("在组件内部可以使用useLocalStore创建局部的可观测的state（useLocalStore也可用与创建全局state）")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("import React from 'react'\nimport { useLocalStore, useObserver } from 'mobx-react' // 6.x\n\nexport const SmartTodo = () => {\n  const todo = useLocalStore(() => ({\n    title: 'Click to toggle',\n    done: false,\n    toggle() {\n      todo.done = !todo.done\n    },\n    get emoji() {\n      return todo.done ? '😜' : '🏃'\n    },\n  }))\n\n  return useObserver(() => (\n    <h3 onClick={todo.toggle}>\n      {todo.title} {todo.emoji}\n    </h3>\n  ))\n}\n")])])]),r("h2",{attrs:{id:"区别observer-useobserver-observer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#区别observer-useobserver-observer"}},[e._v("#")]),e._v(" 区别Observer, useObserver, observer")]),e._v(" "),r("p",[e._v("没什么本质区别，只是写法不一样（Observer, useObserver只能在组件内部使用）")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("import { observable } from 'mobx'\nimport { Observer, useObserver, observer } from 'mobx-react' // 6.x or mobx-react-lite@1.4.0\nimport ReactDOM from 'react-dom'\n\nconst person = observable({\n  name: 'John',\n})\n\n// named function is optional (for debugging purposes)\nconst P1 = observer(function P1({ person }) {\n  return <h1>{person.name}</h1>\n})\n\nconst P2 = ({ person }) => <Observer>{() => <h1>{person.name}</h1>}</Observer>\n\nconst P3 = ({ person }) => {\n  return useObserver(() => <h1>{person.name}</h1>)\n}\n\nReactDOM.render(\n  <div>\n    <P1 person={person} />\n    <P2 person={person} />\n    <P3 person={person} />\n  </div>,\n)\n\nsetTimeout(() => {\n  person.name = 'Jane'\n}, 1000)\n")])])]),r("h2",{attrs:{id:"实战例子"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实战例子"}},[e._v("#")]),e._v(" 实战例子")]),e._v(" "),r("ol",[r("li",[e._v("创建一个store [counter_store.tsx]")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("import { observable, action, computed } from 'mobx';\nexport class CounterStore {\n  @observable \n  count = 0;\n\n  @action\n  increment() {\n    this.count++:\n  }\n\n  @action \n  decrement() {\n    this.count--;\n  }\n\n  @computed\n  get doubleCount() {\n    return this.count *2;\n  }\n}\n")])])]),r("ol",{attrs:{start:"2"}},[r("li",[e._v("然后在全局context上注册store [store.tsx]")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("import React from 'react';\nimport { CounterStore } from \"./counter_store\";\n\nexport const storeContext = React.createContext({\n  counterStore: new CounterStore()\n})\n\nexport const useStores = () => React.useContext(storeContext);\n")])])]),r("ol",{attrs:{start:"3"}},[r("li",[e._v("然后在组件中使用这个context")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('import React from "react";\nimport { observer } from "mobx-react";\nimport { useStores } from "../store";\n\nexport const Counter = observer(() => {\n  const { counterStore } = useStores();\n  return (\n    <>\n      <div>{counterStore.count}</div>\n      <button onClick={() => counterStore.increment()}>++</button>\n      <button onClick={() => counterStore.decrement()}>--</button>\n    </>\n  );\n});\n')])])]),r("p",[r("a",{attrs:{href:"https://codesandbox.io/s/mobx-reactpeihecontextdeshiyongfangfa-1hol6?file=/src/component/friend_make.tsx",target:"_blank",rel:"noopener noreferrer"}},[e._v("实践例子"),r("OutboundLink")],1),e._v("，"),r("a",{attrs:{href:"https://mobx-react.js.org/recipes-migration",target:"_blank",rel:"noopener noreferrer"}},[e._v("mobx-react教程"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=o.exports}}]);