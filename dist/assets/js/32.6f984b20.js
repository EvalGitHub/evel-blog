(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{453:function(e,t,a){e.exports=a.p+"assets/img/blob_url.8915d608.png"},590:function(e,t,a){"use strict";a.r(t);var n=a(28),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"每天一个浏览器的api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#每天一个浏览器的api"}},[e._v("#")]),e._v(" 每天一个浏览器的API")]),e._v(" "),n("h2",{attrs:{id:"window-getselection"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#window-getselection"}},[e._v("#")]),e._v(" window.getSelection")]),e._v(" "),n("blockquote",[n("p",[e._v("返回一个section对象，表示用户选择的文本范围或光标的当前位置")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("var selection = window.getSelection();\nvar selContent = selection.getRangeAt(0);\nvar range1= selContent.getRangeAt(0);\nconsole.log(range1.startContainer);\n")])])]),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/weixin_42420703/article/details/84892528",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于window.getSelection"),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"text-splittext"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#text-splittext"}},[e._v("#")]),e._v(" Text.splitText()")]),e._v(" "),n("blockquote",[n("p",[e._v("splitText() 方法按照指定的 offset 把文本节点分割为两个节点")])]),e._v(" "),n("h2",{attrs:{id:"event-target-closet"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event-target-closet"}},[e._v("#")]),e._v(" event.target.closet")]),e._v(" "),n("blockquote",[n("p",[e._v("遍历元素和他的父级别元素，至到返回目的元素")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<article>\n  <div id="div-01">Here is div-01\n    <div id="div-02">Here is div-02\n      <div id="div-03">Here is div-03</div>\n    </div>\n  </div>\n</article>\n\nvar el = document.getElementById(\'div-03\');\n\nvar r1 = el.closest("#div-02");\n// returns the element with the id=div-02\n\nvar r2 = el.closest("div div");\n// returns the closest ancestor which is a div in div, here it is the div-03 itself\n\nvar r3 = el.closest("article > div");\n// returns the closest ancestor which is a div and has a parent article, here it is the div-01\n\nvar r4 = el.closest(":not(div)");\n')])])]),n("h2",{attrs:{id:"window-speechsynthesis-speechsynthesisutterance"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#window-speechsynthesis-speechsynthesisutterance"}},[e._v("#")]),e._v(" Window.speechSynthesis | SpeechSynthesisUtterance")]),e._v(" "),n("blockquote",[n("p",[e._v("语音api")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// speechSynthesis.getVoices() 可以获取浏览器支持的语音\nvar u = new SpeechSynthesisUtterance();\nu.text = \"文字播放\";\nu.lang = 'zh-HK'; // ja-JP \nu.rate = 8\nspeechSynthesis.speak(u);\n")])])]),n("p",[e._v("https://github.com/mdn/web-speech-api/")]),e._v(" "),n("h2",{attrs:{id:"blob"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#blob"}},[e._v("#")]),e._v(" Blob")]),e._v(" "),n("blockquote",[n("p",[e._v("表示一个不可变，原始数据的类文件对象；它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream 来用于数据操作。")])]),e._v(" "),n("h3",{attrs:{id:"blob构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#blob构造函数"}},[e._v("#")]),e._v(" Blob构造函数")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("new Blob(blobParts, options)\n")])])]),n("ul",[n("li",[e._v("blobParts")])]),e._v(" "),n("p",[e._v("可以是任意多个_ArrayBuffer, ArrayBufferView, Blob或者DOMString")]),e._v(" "),n("ul",[n("li",[e._v("options")])]),e._v(" "),n("p",[e._v("可选项，用于设置blob对象的属性")]),e._v(" "),n("h3",{attrs:{id:"属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),n("ul",[n("li",[e._v("Blob.size: blob对象中包含的数据大小")]),e._v(" "),n("li",[e._v("Blob.type: 表明该Blob对象所含数据的类型")])]),e._v(" "),n("h3",{attrs:{id:"blob数据的读取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#blob数据的读取"}},[e._v("#")]),e._v(" Blob数据的读取")]),e._v(" "),n("ul",[n("li",[e._v("使用FileReader")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("readBlobContent() {\n  const blob = new Blob(['<xml>fo</xml>'], {type: 'text/xml'});\n  const reader = new FileReader();\n  reader.readAsText(blob); // <xml>foo</xml>\n  //reader.readAsArrayBuffer(blob); // ArrayBuffer(14) {}\n  // reader.readAsDataURL(blob);\n}\n")])])]),n("ul",[n("li",[e._v("使用Response对象将Blob中的内容读取为文本")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let text = await (new Response(blob)).text();\n")])])]),n("h3",{attrs:{id:"bloburl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bloburl"}},[e._v("#")]),e._v(" BlobURL")]),e._v(" "),n("blockquote",[n("p",[e._v("是一种伪协议， 只能有浏览器在内部生成；可以把blob和file转化成url生成BlobURL来展示图像，下载二进制数据链接的URL")])]),e._v(" "),n("h4",{attrs:{id:"展示一张图片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#展示一张图片"}},[e._v("#")]),e._v(" 展示一张图片")]),e._v(" "),n("ul",[n("li",[e._v("demo: 直接将将一张图片展示在页面上")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('  <div id="area">\n      <input type="file" multiple id="f" @change="createBlobUrl"/>\n  </div>\n\n  // create blobURL\n  getObjectUrl(file) {\n    let url = null;\n    if (window.createObjectURL) {\n        url = window.createObjectURL(file);\n    } else if (window.URL) {\n      url = window.URL.createObjectURL(file);\n    } else if (window.webkitURL) {\n      url = window.webkitURL.createObjectURL(file);\n    }\n    return url;\n  },\n  createBlobUrl(event) {\n    const ele = document.getElementById(\'f\');\n    const content = document.getElementById(\'area\');\n    const files = event.target.files;\n    const file = files[0];\n    const img = document.createElement(\'img\');\n    img.src = this.getObjectUrl(file);\n    content.appendChild(img);\n  }\n')])])]),n("p",[e._v("操作之后可以发现这个链接不是一个普通的img链接, 这种方式类似于base64的形式")]),e._v(" "),n("p",[n("img",{attrs:{src:a(453),alt:"avatar"}})]),e._v(" "),n("p",[n("strong",[e._v("如果使用dataURL的形式如何展示呢？")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("createDataUrl(event) {\n  const ele = document.getElementById('f');\n  const content = document.getElementById('area');\n  const files = event.target.files;\n  const file = files[0];\n  const img = document.createElement('img');\n  const reader = new FileReader();\n  reader.onload = () => {\n    img.src = reader.result;\n  };\n  reader.readAsDataURL(file);\n  content.appendChild(img);\n}\n")])])]),n("h4",{attrs:{id:"下载一个文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下载一个文件"}},[e._v("#")]),e._v(" 下载一个文件")]),e._v(" "),n("ul",[n("li",[e._v("blobURL")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("downloadFun() {\n  const fileName = 'download.txt';\n  const blob = new Blob(['test data'], { type: 'text/plain' });\n  const link = document.createElement('a');\n  link.href = this.getObjectUrl(blob);\n  link.download = fileName;\n  link.click();\n  link.remove();\n  URL.revokeObjectURL(link.href);\n}\n")])])]),n("ul",[n("li",[e._v("dataURL")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("downloadFun() {\n  const fileName = 'download.txt';\n  const blob = new Blob(['test data'], { type: 'text/plain' });\n  const reader = new FileReader();\n  const link = document.createElement('a');\n  link.download = fileName;\n  reader.onload = () => {\n    link.href = reader.result;\n    link.click();\n  };\n  reader.readAsDataURL(blob);\n}\n")])])]),n("h3",{attrs:{id:"dataurl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dataurl"}},[e._v("#")]),e._v(" dataURL")]),e._v(" "),n("blockquote",[n("p",[e._v("将较小的文件嵌入到文档中, 语法格式，data:mediatype[;base64],data")])]),e._v(" "),n("p",[n("strong",[e._v("获取dataUrl")])]),e._v(" "),n("ul",[n("li",[e._v("FileReader的readAsDataURL")]),e._v(" "),n("li",[e._v("原生的编码方法btoa, 解码atob")]),e._v(" "),n("li",[e._v("canvas的toDateURL")])]),e._v(" "),n("h4",{attrs:{id:"dataurl-bloburl的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dataurl-bloburl的区别"}},[e._v("#")]),e._v(" dataURL & blobURL的区别")]),e._v(" "),n("ul",[n("li",[e._v("BlobUrl较短，它并不代表数据本身，数据存储在浏览器中，BlobUrl只是访问它的key; 但DataUrl因为直接存储图片base64编码后的数据")])]),e._v(" "),n("h2",{attrs:{id:"deviceorientation与devicemotion"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#deviceorientation与devicemotion"}},[e._v("#")]),e._v(" DeviceOrientation与devicemotion")])])}),[],!1,null,null,null);t.default=s.exports}}]);