(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{481:function(t,s,e){"use strict";e.r(s);var a=e(28),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"h5-移动端开发总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#h5-移动端开发总结"}},[t._v("#")]),t._v(" H5，移动端开发总结")]),t._v(" "),e("h2",{attrs:{id:"常见问题汇总"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见问题汇总"}},[t._v("#")]),t._v(" 常见问题汇总")]),t._v(" "),e("h3",{attrs:{id:"_1px像素模糊原因-及解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1px像素模糊原因-及解决方案"}},[t._v("#")]),t._v(" 1px像素模糊原因，及解决方案？")]),t._v(" "),e("p",[e("strong",[t._v("模糊原因：")])]),t._v(" "),e("p",[t._v("手机设备分为高清屏和非高清屏（对应dpr），会导致视觉上的模糊。")]),t._v(" "),e("p",[e("strong",[t._v("解决方案：")])]),t._v(" "),e("ol",[e("li",[t._v("border-image")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("border-width: 0 0 1px 0;\nborder-image: url(linenew.png) 0 0 2 0 stretch;\n")])])]),e("p",[t._v("弊端：固定，有颜色还得换图")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("CSS3 box-shadow")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".border-bottom{\n  box-shadow: inset 0px -1px 1px -1px #d46d7\n}\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("伪类缩放")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".border-1px{\n  position: relative;\n  margin-bottom: 20px;\n  border:none;\n}\n\n.border-1px:after{\n　display :block ;\n　position :absolute;\n　bottom :0;\n　left :0 ;\n　width:100%;\n　border-top:1px solid $color;\n　content :' ';\n}\n\n@media (-webkit-min-device-pixel-ratio: 2),(min-device-pixel-ratio:2) // 高清屏缩放\n.border-1px::after{\n  -webkit-transform:scaleY(0.5)\n  transform:scaleY(0.5);\n}\n")])])]),e("h3",{attrs:{id:"dpr及相关应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dpr及相关应用"}},[t._v("#")]),t._v(" dpr及相关应用？")]),t._v(" "),e("p",[e("strong",[t._v("window.devicePixelRatio = physical pixels / dips")])]),t._v(" "),e("p",[t._v("window.devicePixelRatio 是设备上物理像素 (physical pixels) 和设备无关像素 (device-independent pixels (dips)) 的比例，直言就是 "),e("strong",[t._v("分辨率/clientWidth")])]),t._v(" "),e("ul",[e("li",[t._v("首先，dips 是一种度量单位")]),t._v(" "),e("li",[t._v("然后，要知道浏览器并不是根据物理硬件的像素来工作的，而是根据 dips 宽度来工作。")]),t._v(" "),e("li",[t._v("最后，还要知道 dips 是将像素值与实际距离联系起来的，不管屏幕的像素密度是多少，dips 为 1px，那么实际宽度就是 1px，也就是对应 CSS 中的 1px，而不是对应物理像素 1px。")])]),t._v(" "),e("p",[t._v("em1:")]),t._v(" "),e("blockquote",[e("p",[t._v("我们举个简单例子，MacBook Pro 13.3 英寸的显示器分辨率是 2560 x 1600，这个 2560px 就是我们前面说的设备上的物理像素值(设备像素值)，而浏览器全屏显示的宽度只有 1280px（设备无关像素 ），DPR 在这里所表达的意思就是：1280 dips 在实际显示的时候，被硬件扩展到了 2560 的硬件像素宽度，2 个物理像素对应 1 个 CSS 像素（这个指的水平方向或垂直方向，如果在一个平面内的话 4 个物理像素点对应 1 个 CSS 像素点）。")])]),t._v(" "),e("p",[t._v("如果现在上面这台电脑里有一张实际宽度为 200px 的高清图片，在浏览器里被 css 设置宽度为 200px，那么这张图片看起来就会有点模糊，因为它实际被硬件扩展到了 400px 的硬件像素宽度，是它实际宽度的两倍。但是，如果它被 css 设置宽度为 100px，这时候它实际被硬件扩展到了 200px 的硬件像素宽度，和它实际像素一致，就不会模糊了。")]),t._v(" "),e("p",[e("strong",[t._v("布局窗口：")])]),t._v(" "),e("blockquote",[e("p",[t._v("移动端css布局的依据视口，即css布局会根据布局视口来计算(在手机端为了能容纳浏览器设计的网站，默认的布局视口宽度远大于屏幕的宽度）\n获取布局宽高： document.documentElement.clientWidth/clientHeight")])]),t._v(" "),e("p",[e("strong",[t._v("视觉视口：")]),t._v(" 看到的地方都是视觉窗口，与布局窗口的区别在于，缩放的时候改变的是视觉窗口大小，布局窗口是不变的，css不变，但是1px代表的实际物理像素个数会进行缩放。获取方式：window.innerWidth")]),t._v(" "),e("p",[e("strong",[t._v("理想视口：")]),t._v(" 是我们需要关注的，我们的页面设计需要用到；width=device-width使得布局视口等同于理想视口")]),t._v(" "),e("p",[t._v("如果我们在编写元素的时候，给元素一个width：200px,(css样式是基于布局视口计算的)，但是设计师给我们的设计图都是基于设备像素的")]),t._v(" "),e("p",[t._v("参考："),e("a",{attrs:{href:"https://mp.weixin.qq.com/s/IEQ0ZP7Zw60nTBi8QnoKWQ?",target:"_blank",rel:"noopener noreferrer"}},[t._v("一篇真正教会你开发移动端页面的文章(一)"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"h5适配方案-原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#h5适配方案-原理"}},[t._v("#")]),t._v(" h5适配方案，原理？")]),t._v(" "),e("p",[t._v("vw，rem")]),t._v(" "),e("h3",{attrs:{id:"position-fixed兼容性处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#position-fixed兼容性处理"}},[t._v("#")]),t._v(" position:fixed兼容性处理？")]),t._v(" "),e("p",[t._v("在safari上可能会出现position:fixed定位的元素随着整个屏幕滚动而发生滚动")]),t._v(" "),e("p",[e("strong",[t._v("解决方案：")])]),t._v(" "),e("p",[t._v("将滚动区域通过position:absolute与position:fixed区域分开，然后给position:absolute设置滚动效果。")]),t._v(" "),e("h3",{attrs:{id:"_300ms延时-就应对方案-原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_300ms延时-就应对方案-原理"}},[t._v("#")]),t._v(" 300ms延时，就应对方案（原理）?")]),t._v(" "),e("p",[e("strong",[t._v("产生原因：")])]),t._v(" "),e("p",[t._v("浏览器支持双击缩放，当我们在完成了一次click之后，浏览器不知道用户的真是意图，会在等待300ms，如果在300ms之内用户完成了\n第二次click，就会是的浏览器发生放大，或者缩小的效果。这也就是我们的任何操作都需要等待300ms之后浏览器才会进行响应。")]),t._v(" "),e("p",[e("strong",[t._v("解决方案")])]),t._v(" "),e("ol",[e("li",[t._v("禁止网页缩放")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<meta name="viewport" content="user-scalable=no,initial-scale=1,maximum-scale=1,minimum-scale=1">\n')])])]),e("p",[t._v("原理：直接限制用户进行缩放，从源头上规避了300ms延时的问题。")]),t._v(" "),e("p",[t._v("弊端：这样设计之后会导致用户不能对网页进行缩放，在小屏幕上如果网页上的操纵按钮很小，用户是很希望去将网页放大然后点击按钮的，\n在一些浏览器上可能会完全禁止了缩放。")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("改变默认的视口宽度")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<meta name="viewport" content="width=device-width">\n')])])]),e("p",[t._v("双击缩放主要是解决pc网页在移动设备上进行的优化处理，如果这个网页本身就是移动的网页，其实不需要双击缩放的优化处理。设置width=device-width，告诉浏览器这个网页已经做了适配优化。禁止了连续双击缩放，但是保留了手指的拖动缩放。")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("faskclick")])]),t._v(" "),e("p",[t._v("原理检测到touchend事件之后，会通过DOM自定义事件立即发出模拟一个click事件，并把浏览器在\n300ms之后的真正事件阻止掉。")]),t._v(" "),e("h3",{attrs:{id:"点击击穿"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点击击穿"}},[t._v("#")]),t._v(" 点击击穿")]),t._v(" "),e("p",[t._v("为了解决300ms延时，你可能会想到使用touchstart事件来代替click事件，但是又引起了另一个问题“点击击穿”，")]),t._v(" "),e("p",[t._v("手机上事件执行的顺序touchstart，touchmove，touchend\n浏览器在 touchend 之后会等待约 300ms ，触发 click 事件，这个会造成很多意外情况，")]),t._v(" "),e("blockquote",[e("p",[t._v("点击穿透的现象就容易理解了，在这 300ms 以内，因为上层元素隐藏或消失了，由于 click 事件的滞后性，同样位置的 DOM 元素触发了 click 事件（如果是 input 则触发了 focus 事件）。")])]),t._v(" "),e("p",[e("strong",[t._v("解决方案：")])]),t._v(" "),e("p",[t._v("不是使用touch事件")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/leftJS/p/11095226.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击穿透事件原因及解决办法"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"设置小于12px的字体方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置小于12px的字体方案"}},[t._v("#")]),t._v(" 设置小于12px的字体方案？")]),t._v(" "),e("p",[t._v("chrome浏览器认为字体小于12px之后会影响用户的阅读体验，因此就默认进行调整（即使你设置了font-size:10px），它会自动进行调节;\n"),e("strong",[t._v("只有chrome存在这个自动调节问题")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("解决方案")])]),t._v(" "),e("ol",[e("li",[t._v("text-size-adjust")])]),t._v(" "),e("p",[t._v("默认值：auto自动进行字体调节，可以设置为none禁止自动调节，但是这个属性存在兼容性问题，但是chrome是支持这个属性的，所以在\n大多数情况下是没问题的。")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("transform:scale(n);")])]),t._v(" "),e("p",[t._v("使用transform:scale进行等比例的缩放，例如你想设置9px的字体")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".some_class {\n  font-size: 9px; // 只有chrome会默认为12px\n  -webkit-transform: scale(0.75); // 针对能识别-webkit的浏览器做设置\n  -o-transform: scale(1);  // \n}\n")])])]),e("p",[t._v("弊端：scale会导致字体间距变小，所以我们需要做额外处理letter-spaceing，另外对与能设置小于9px的浏览器而言是个问题。")]),t._v(" "),e("h3",{attrs:{id:"移动端滑动不流畅"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动端滑动不流畅"}},[t._v("#")]),t._v(" 移动端滑动不流畅？")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("webkit-overflow-scrolling: touch\n")])])]),e("p",[t._v("好文推荐：https://mp.weixin.qq.com/s/7AJ07G3pSfQfCbg_eEArmg")])])}),[],!1,null,null,null);s.default=r.exports}}]);