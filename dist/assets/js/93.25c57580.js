(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{556:function(t,e,n){"use strict";n.r(e);var a=n(28),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"自定义一个全局组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义一个全局组件"}},[t._v("#")]),t._v(" 自定义一个全局组件")]),t._v(" "),n("p",[t._v("如果你看过elementUI的实现源码你会发现，他的组件都是利用Vue.extend 进行封装的全局组件")]),t._v(" "),n("h3",{attrs:{id:"如何实现一个全局的toast组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何实现一个全局的toast组件"}},[t._v("#")]),t._v(" 如何实现一个全局的toast组件？？")]),t._v(" "),n("h4",{attrs:{id:"_1-首先toast应该有自己的样式-ui"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-首先toast应该有自己的样式-ui"}},[t._v("#")]),t._v(" 1）首先toast应该有自己的样式（ui）")]),t._v(" "),n("h4",{attrs:{id:"toast-vue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#toast-vue"}},[t._v("#")]),t._v(" Toast.vue")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n  <transition name="fade">\n    <div class="message" :class="type" v-show="show">\n      <i class="icon"></i>\n      <span class="text">{{text}}</span>\n    </div>\n  </transition>\n</template>\n<script>\nexport default {\n  name: "Toast",\n  props: {\n    type: {\n      type: String,\n      default: \'info\',\n      validator: val => [\'info\', \'success\', \'warning\', \'error\'].includes(val)\n    },\n    text: {\n      type: String,\n      default: \'\'\n    },\n    show: {\n      type: Boolean,\n      default: false\n    }\n  }\n}\n<\/script>\n<style scoped lang="scss">\n  .fade-enter-active,\n  .fade-leave-active  {\n     transition: opacity .3s\n  }\n  .fade-enter,\n  .fade-leave-to {\n     opacity: 0\n  }\n  .message {\n    position: fixed;\n    top: 0.2rem;\n    text-align: center;\n    left: 50%;\n    transform: translateX(-50%);\n    min-width: 0.8rem;\n    padding: 5px 20px;\n    color: #fff;\n    background-color: #009cde;\n    font-size: 0.14rem;\n    line-height: 1.4;\n    border-radius: 0.1rem;\n    z-index: 1000;\n    box-shadow: 0 1.46px 3.67px 0 rgba(0, 155, 222, .7);\n    &.info{\n      // color: #05D3E5;\n      color: #fff;\n    }\n    &.success {\n      color: #73BC65 ;\n    }\n    &.error {\n      color: #E54305;\n    }\n    &.warning {\n     color:  #E5B705;\n    }\n  }\n</style>\n')])])]),n("p",[t._v("在props中定义了三个属性【type, text, show】")]),t._v(" "),n("ul",[n("li",[t._v("type: toast的类型，")]),t._v(" "),n("li",[t._v("text： toast的文案")]),t._v(" "),n("li",[t._v("show：控制toast的显示与隐藏")])]),t._v(" "),n("h4",{attrs:{id:"_2-如何能像调用函数样调用我们的组件-而不是把它当做html标签"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何能像调用函数样调用我们的组件-而不是把它当做html标签"}},[t._v("#")]),t._v(" 2）如何能像调用函数样调用我们的组件，而不是把它当做html标签？")]),t._v(" "),n("blockquote",[n("p",[t._v("例如：  this.$message.info('我是通过vue.extend实现的组件构造器')")])]),t._v(" "),n("p",[t._v("在使用第三方库的时候，例如vueRouter，vux，都需要使用Vue.use(Router), vue.use(vux)，然后就可以使用this.$router,说明其中肯定有向vue.prototype上注册的过程。")]),t._v(" "),n("blockquote",[n("p",[t._v("vue.prototype.$router = vueRouter")])]),t._v(" "),n("p",[t._v("另外必须知道是vue.use（）函数会执行目标对象的install方法，vue.use(Router)，会执行Router 的install方法。")]),t._v(" "),n("p",[t._v("因此我们可以将自定义Toast组件的初始定义操作放在install中")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import Toast from './Toast'\nconst SelfToast = function () {\n  this.duration = 2000\n  this.animateTime = 300\n  this.install = (Vue) => {\n    if (typeof window !== 'undefined' && window.Vue) {\n      Vue = window.Vue\n    }\n    Vue.component(\"Toast\", Toast)  // 将自定义的Toast注册成一个标签\n    const msgFun = (type, text, callBack) => {\n      let msg\n      let duration = this.duration\n      let animateTime = this.animateTime\n      if (typeof text === 'string') {\n        msg = text\n      } else if (text instanceof Object) {\n        msg = text.text || ''\n        if (text.duration) {\n          duration = text.duration\n        }\n        if (text.animateTime) {\n          animateTime = text.animateTime\n        }\n      }\n      let VueMessage = Vue.extend({ // Vue.extend会生成一个vue实例构造器\n        render(h) {\n          let props = {\n            type,\n            text: msg,\n            show: this.show\n          }\n          return h('Toast', {props}) \n        },\n        data() {\n          return {\n            show: false\n          }\n        }\n      })\n      let newMessage = new VueMessage() // 生成一个vue实例\n      let vm = newMessage.$mount()\n      let el = vm.$el\n      document.body.appendChild(el) // 将元素挂载到dom上\n      vm.show = true\n      let t1 = setTimeout(() => {\n        t1 && clearTimeout(t1)\n        vm.show = false  \n        let t2 = setTimeout(() => {\n          t2 && clearTimeout(t2)\n          document.body.removeChild(el) // 移除\n          newMessage.$destroy()\n          vm = null\n          callBack && (typeof callBack === 'function') && callBack() \n        }, animateTime)\n      }, duration)\n    }\n\n    // 挂载到vue原型上，暴露四个方法\n    Vue.prototype.$message = {\n      info(text, callBack) {\n        if (!text) return\n        msgFun('info', text, callBack)\n      },\n      success(text, callBack) {\n        if (!text) return\n        msgFun('success', text, callBack)\n      },\n      error(text, callBack) {\n        if (!text) return\n        msgFun('error', text, callBack)\n      },\n      warning(text, callBack) {\n        if (!text) return\n        msgFun('warning', text, callBack)\n      }\n    }\n  }\n}\n")])])]),n("h4",{attrs:{id:"_3-如何使用了"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何使用了"}},[t._v("#")]),t._v(" 3）如何使用了？")]),t._v(" "),n("p",[t._v("首先在main.js中注册：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("引入注册")]),t._v(" "),n("ul",[n("li",[t._v("import vMessage from './components/Toast/index'")]),t._v(" "),n("li",[t._v("Vue.use(vMessage)")])])]),t._v(" "),n("li",[n("p",[t._v("使用")]),t._v(" "),n("ul",[n("li",[t._v("this.$message.info('我是通过vue.extend实现的组件构造器')")])])])]),t._v(" "),n("p",[t._v("参考： "),n("a",{attrs:{href:"https://github.com/EvalGitHub/vue-study.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/EvalGitHub/vue-study.git"),n("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);